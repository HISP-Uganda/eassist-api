name: Migrate Database (eAssist API)

on:
  push:
    branches: [ "releases" ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: migrate-production
  cancel-in-progress: false

env:
  DEPLOY_PATH: /opt/eassist-api
  DEPLOY_HOST: ${{ secrets.DEPLOY_HOST || '194.163.173.144' }}
  DEPLOY_USER: ${{ secrets.DEPLOY_USER || 'gitdeploy' }}
  DEPLOY_PORT: ${{ secrets.DEPLOY_PORT || '22' }}

jobs:
  migrate:
    name: Run migrations remotely
    runs-on: ubuntu-latest
    if: >-
      ${{ github.ref == 'refs/heads/releases' || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/releases') }}
    env:
      GIT_SHA: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate required files & secrets
        run: |
          set -euo pipefail
          if [ -z "${{ secrets.EASSIST_API_SRV }}" ]; then
            echo '::error::Missing required secret: EASSIST_API_SRV' >&2; exit 1; fi
          if [ ! -f scripts/run-migrations.js ]; then
            echo '::error::scripts/run-migrations.js not found' >&2; exit 1; fi
          if [ ! -d scripts/migrations ]; then
            echo '::error::scripts/migrations directory missing' >&2; exit 1; fi
          echo 'Validation passed.'

      - name: Install rsync
        run: sudo apt-get update -y && sudo apt-get install -y rsync

      - name: Prepare SSH key & known_hosts
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf '%s' "${{ secrets.EASSIST_API_SRV }}" > ~/.ssh/id_deploy
          chmod 600 ~/.ssh/id_deploy
          eval "$(ssh-agent -s)" >/dev/null
          ssh-add ~/.ssh/id_deploy
          if [ -n "${{ secrets.DEPLOY_HOST_KNOWN_HOSTS || '' }}" ]; then
            echo "${{ secrets.DEPLOY_HOST_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          else
            ssh-keyscan -p "$DEPLOY_PORT" -H "$DEPLOY_HOST" > ~/.ssh/known_hosts 2>/dev/null || true
          fi
          chmod 644 ~/.ssh/known_hosts

      - name: Sync migration scripts only
        run: |
          set -euo pipefail
          RSYNC_RSH="ssh -p ${DEPLOY_PORT} -o StrictHostKeyChecking=yes"
          # Only send migrations + migration runner + package manifest (in case scripts rely on version)
          rsync -az \
            --include='scripts/' \
            --include='scripts/migrations/' \
            --include='scripts/migrations/***' \
            --include='scripts/run-migrations.js' \
            --include='package.json' \
            --exclude='*' \
            -e "$RSYNC_RSH" ./ "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}/"

      - name: Run remote migrations
        run: |
          set -euo pipefail
          ssh -p "$DEPLOY_PORT" -o StrictHostKeyChecking=yes "${DEPLOY_USER}@${DEPLOY_HOST}" \
            "cd '${DEPLOY_PATH}' && if command -v node >/dev/null; then \n node scripts/run-migrations.js || npm run migrate:run || npm run migrate || echo '::warning::Migration script returned non-zero.'; \n else echo '::error::Node.js not available on server'; exit 1; fi"

      - name: Summary
        run: |
          {
            echo "Database migrations executed";
            echo "Commit: $GIT_SHA";
            echo "Target: ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PORT} -> ${DEPLOY_PATH}";
            echo "Migrations directory: scripts/migrations";
          } >> "$GITHUB_STEP_SUMMARY"
