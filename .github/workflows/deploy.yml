name: Migrate Database (eAssist API)

on:
  push:
    branches: [ "releases" ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: migrate-production
  cancel-in-progress: false

jobs:
  migrate:
    name: Run migrations remotely
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/releases'
    env:
      DEPLOY_PATH: /opt/eassist-api
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST || '194.163.173.144' }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER || 'gitdeploy' }}
      DEPLOY_PORT: ${{ secrets.DEPLOY_PORT || '22' }}
      GIT_SHA: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate prerequisites
        run: |
          set -euo pipefail
          if [ -z "${{ secrets.EASSIST_API_SRV }}" ]; then
            echo '::error::Missing required secret: EASSIST_API_SRV' >&2; exit 1; fi
          if [ ! -f scripts/run-migrations.js ]; then
            echo '::error::scripts/run-migrations.js not found' >&2; exit 1; fi
          if [ ! -d scripts/migrations ]; then
            echo '::error::scripts/migrations directory missing' >&2; exit 1; fi
          echo 'Prerequisites OK.'

      - name: Install rsync
        run: sudo apt-get update -y && sudo apt-get install -y rsync

      - name: Setup SSH
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf '%s' "${{ secrets.EASSIST_API_SRV }}" > ~/.ssh/id_migrate
          chmod 600 ~/.ssh/id_migrate
          eval "$(ssh-agent -s)" >/dev/null
          ssh-add ~/.ssh/id_migrate
          if [ -n "${{ secrets.DEPLOY_HOST_KNOWN_HOSTS || '' }}" ]; then
            echo "${{ secrets.DEPLOY_HOST_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          else
            ssh-keyscan -p "$DEPLOY_PORT" -H "$DEPLOY_HOST" > ~/.ssh/known_hosts 2>/dev/null || true
          fi
          chmod 644 ~/.ssh/known_hosts

      - name: Sync migration assets
        run: |
          set -euo pipefail
          RSYNC_RSH="ssh -p ${DEPLOY_PORT} -o StrictHostKeyChecking=yes"
          rsync -az \
            --include='scripts/' \
            --include='scripts/migrations/' \
            --include='scripts/migrations/**' \
            --include='scripts/run-migrations.js' \
            --include='package.json' \
            --exclude='*' \
            -e "$RSYNC_RSH" ./ "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}/"

      - name: Run migrations remotely
        run: |
          set -euo pipefail
          ssh -p "$DEPLOY_PORT" -o StrictHostKeyChecking=yes "${DEPLOY_USER}@${DEPLOY_HOST}" bash -s <<'EOF'
set -euo pipefail
cd "$DEPLOY_PATH" || { echo '::error::Cannot cd to deploy path' >&2; exit 1; }
if ! command -v node >/dev/null; then echo '::error::Node.js not on PATH' >&2; exit 1; fi
if [ ! -f scripts/run-migrations.js ]; then echo '::error::run-migrations.js missing after sync' >&2; exit 1; fi
if [ ! -d scripts/migrations ]; then echo '::error::migrations dir missing after sync' >&2; exit 1; fi
echo "[Remote] Starting migrations at $(date -u +%Y-%m-%dT%H:%M:%SZ)";
node scripts/run-migrations.js || npm run migrate:run || npm run migrate || echo '::warning::Migration script exited non-zero';
echo "[Remote] Migrations completed";
EOF

      - name: Summary
        run: |
          {
            echo 'Migrations run';
            echo "Commit: $GIT_SHA";
            echo "Target: ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PORT} -> ${DEPLOY_PATH}";
            echo 'Paths synced: scripts/migrations, scripts/run-migrations.js';
          } >> "$GITHUB_STEP_SUMMARY"
