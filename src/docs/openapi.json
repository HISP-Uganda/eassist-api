{
  "openapi": "3.0.3",
  "info": {
    "title": "EAssist API",
    "version": "1.0.0",
    "description": "Auto-generated OpenAPI specification from Express routes."
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "auth/login"
    },
    {
      "name": "auth/refresh"
    },
    {
      "name": "auth/logout"
    },
    {
      "name": "auth/me"
    },
    {
      "name": "auth/whoami"
    },
    {
      "name": "auth/request-password-reset"
    },
    {
      "name": "auth/reset-password"
    },
    {
      "name": "system/lookups"
    },
    {
      "name": "analytics/dashboards"
    },
    {
      "name": "analytics/reports"
    },
    {
      "name": "analytics/exports"
    },
    {
      "name": "tickets/notes"
    },
    {
      "name": "tickets/attachments"
    },
    {
      "name": "tickets/watchers"
    },
    {
      "name": "tickets/events"
    },
    {
      "name": "tickets"
    },
    {
      "name": "tickets/:id"
    },
    {
      "name": "system/users"
    },
    {
      "name": "system/roles"
    },
    {
      "name": "system/settings"
    },
    {
      "name": "system/workflows"
    },
    {
      "name": "system/inbox"
    },
    {
      "name": "system/files"
    },
    {
      "name": "system/audit"
    },
    {
      "name": "admin/me"
    },
    {
      "name": "admin/preferences"
    },
    {
      "name": "admin/notifications"
    },
    {
      "name": "public/ping"
    },
    {
      "name": "public/endpoints"
    },
    {
      "name": "public/tickets"
    },
    {
      "name": "public/faqs"
    },
    {
      "name": "public/kb"
    },
    {
      "name": "public/videos"
    },
    {
      "name": "public/search"
    },
    {
      "name": "tokens/api-keys"
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth/login"
        ],
        "summary": "POST /api/auth/login",
        "description": "Create a new login.",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/login' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/login' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/login' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/login' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/login' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/login' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/login' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/login' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "auth/refresh"
        ],
        "summary": "POST /api/auth/refresh",
        "description": "Create a new refresh.",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/refresh' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/refresh' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/refresh' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/refresh' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/refresh' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/refresh' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/refresh' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/refresh' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "auth/logout"
        ],
        "summary": "POST /api/auth/logout",
        "description": "Create a new logout.",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/logout' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/logout' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/logout' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/logout' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/logout' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/logout' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/logout' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/logout' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "auth/me"
        ],
        "summary": "GET /api/auth/me",
        "description": "List me with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/me' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/me' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/me' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/me' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/me' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/me' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/whoami": {
      "get": {
        "tags": [
          "auth/whoami"
        ],
        "summary": "GET /api/auth/whoami",
        "description": "List whoami with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/whoami' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/whoami' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/whoami' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/whoami' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/whoami' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/auth/whoami' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/request-password-reset": {
      "post": {
        "tags": [
          "auth/request-password-reset"
        ],
        "summary": "POST /api/auth/request-password-reset",
        "description": "Create a new request-password-reset.",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/request-password-reset' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/request-password-reset' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/request-password-reset' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/request-password-reset' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/request-password-reset' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/request-password-reset' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/request-password-reset' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/request-password-reset' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "tags": [
          "auth/reset-password"
        ],
        "summary": "POST /api/auth/reset-password",
        "description": "Create a new reset-password.",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/reset-password' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/reset-password' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/reset-password' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/reset-password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/reset-password' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/reset-password' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/reset-password' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/auth/reset-password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/statuses": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/statuses",
        "description": "List statuses with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/statuses",
        "description": "Create a new statuse.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/statuses' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/statuses' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/statuses' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/statuses' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/statuses' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/statuses' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/statuses/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/statuses/:id",
        "description": "Get a statuse by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/statuses/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/statuses/:id",
        "description": "Update an existing statuse.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/statuses/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/statuses/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/statuses/:id",
        "description": "Delete a statuse.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/statuses/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/statuses/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/statuses/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/priorities": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/priorities",
        "description": "List priorities with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/priorities",
        "description": "Create a new prioritie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/priorities' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/priorities' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/priorities' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/priorities' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/priorities' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/priorities' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/priorities/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/priorities/:id",
        "description": "Get a prioritie by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/priorities/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/priorities/:id",
        "description": "Update an existing prioritie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/priorities/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/priorities/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/priorities/:id",
        "description": "Delete a prioritie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/priorities/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/priorities/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/priorities/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/severities": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/severities",
        "description": "List severities with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/severities",
        "description": "Create a new severitie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/severities' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/severities' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/severities' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/severities' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/severities' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/severities' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/severities/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/severities/:id",
        "description": "Get a severitie by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/severities/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/severities/:id",
        "description": "Update an existing severitie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/severities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/severities/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/severities/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/severities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/severities/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/severities/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/severities/:id",
        "description": "Delete a severitie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/severities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/severities/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/severities/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/severities/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/severities/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/severities/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/sources": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/sources",
        "description": "List sources with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/sources",
        "description": "Create a new source.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/sources' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/sources' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/sources' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/sources' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/sources' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/sources' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/sources/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/sources/:id",
        "description": "Get a source by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/sources/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/sources/:id",
        "description": "Update an existing source.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/sources/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/sources/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/sources/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/sources/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/sources/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/sources/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/sources/:id",
        "description": "Delete a source.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/sources/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/sources/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/sources/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/sources/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/sources/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/sources/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/systems": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/systems",
        "description": "List systems with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/systems",
        "description": "Create a new system.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/systems' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/systems' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/systems' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/systems' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/systems' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/systems' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/systems/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/systems/:id",
        "description": "Get a system by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/systems/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/systems/:id",
        "description": "Update an existing system.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/systems/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/systems/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/systems/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/systems/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/systems/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/systems/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/systems/:id",
        "description": "Delete a system.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/systems/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/systems/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/systems/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/systems/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/systems/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/systems/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/system-modules": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/system-modules",
        "description": "List system-modules with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/system-modules",
        "description": "Create a new system-module.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-modules' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-modules' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-modules' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-modules' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-modules' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-modules' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemModule"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/system-modules/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/system-modules/:id",
        "description": "Get a system-module by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-modules/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/system-modules/:id",
        "description": "Update an existing system-module.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-modules/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-modules/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemModule"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/system-modules/:id",
        "description": "Delete a system-module.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-modules/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-modules/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-modules/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/issue-categories": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/issue-categories",
        "description": "List issue-categories with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/issue-categories",
        "description": "Create a new issue-categorie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/issue-categories' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/issue-categories' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/issue-categories' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/issue-categories' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/issue-categories' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/issue-categories' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/issue-categories/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/issue-categories/:id",
        "description": "Get a issue-categorie by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/issue-categories/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/issue-categories/:id",
        "description": "Update an existing issue-categorie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/issue-categories/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/issue-categories/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/issue-categories/:id",
        "description": "Delete a issue-categorie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/issue-categories/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/issue-categories/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/issue-categories/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/system-category": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/system-category",
        "description": "List system-category with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/system-category",
        "description": "Create a new system-category.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-category' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-category' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-category' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-category' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-category' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/system-category' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemCategory"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/system-category/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/system-category/:id",
        "description": "Get a system-category by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/system-category/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/system-category/:id",
        "description": "Update an existing system-category.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-category/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/system-category/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemCategory"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/system-category/:id",
        "description": "Delete a system-category.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-category/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-category/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/system-category/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/support-tiers": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/support-tiers",
        "description": "List support-tiers with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/support-tiers",
        "description": "Create a new support-tier.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-tiers' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-tiers' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-tiers' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-tiers' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-tiers' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-tiers' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/support-tiers/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/support-tiers/:id",
        "description": "Get a support-tier by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-tiers/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/support-tiers/:id",
        "description": "Update an existing support-tier.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-tiers/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-tiers/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/support-tiers/:id",
        "description": "Delete a support-tier.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-tiers/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-tiers/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-tiers/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/support-groups": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/support-groups",
        "description": "List support-groups with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/support-groups",
        "description": "Create a new support-group.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-groups' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-groups' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-groups' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-groups' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-groups' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/support-groups' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/support-groups/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/support-groups/:id",
        "description": "Get a support-group by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/support-groups/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/support-groups/:id",
        "description": "Update an existing support-group.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-groups/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/support-groups/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/support-groups/:id",
        "description": "Delete a support-group.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-groups/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-groups/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/support-groups/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/video-categories": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/video-categories",
        "description": "List video-categories with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/video-categories",
        "description": "Create a new video-categorie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/video-categories' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/video-categories' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/video-categories' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/video-categories' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/video-categories' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/lookups/video-categories' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/lookups/video-categories/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/video-categories/:id",
        "description": "Get a video-categorie by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/lookups/video-categories/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/video-categories/:id",
        "description": "Update an existing video-categorie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/video-categories/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/lookups/video-categories/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/video-categories/:id",
        "description": "Delete a video-categorie.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/video-categories/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/video-categories/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/lookups/video-categories/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/dashboards/overview": {
      "get": {
        "tags": [
          "analytics/dashboards"
        ],
        "summary": "GET /api/analytics/dashboards/overview",
        "description": "List overview with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/overview' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/overview' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/overview' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/overview' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/overview' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/overview' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/dashboards/by-category": {
      "get": {
        "tags": [
          "analytics/dashboards"
        ],
        "summary": "GET /api/analytics/dashboards/by-category",
        "description": "List by-category with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/by-category' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/by-category' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/by-category' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/by-category' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/by-category' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/dashboards/by-category' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/reports": {
      "get": {
        "tags": [
          "analytics/reports"
        ],
        "summary": "GET /api/analytics/reports",
        "description": "List reports with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/reports' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/reports' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/reports' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/reports' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/reports' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/reports' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "analytics/reports"
        ],
        "summary": "POST /api/analytics/reports",
        "description": "Create a new report.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/analytics/reports' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/analytics/reports' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/analytics/reports' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/analytics/reports' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/analytics/reports' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/analytics/reports' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/reports/{id}": {
      "put": {
        "tags": [
          "analytics/reports"
        ],
        "summary": "PUT /api/analytics/reports/:id",
        "description": "Update an existing report.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/analytics/reports/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/analytics/reports/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/analytics/reports/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/analytics/reports/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/analytics/reports/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/analytics/reports/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "analytics/reports"
        ],
        "summary": "DELETE /api/analytics/reports/:id",
        "description": "Delete a report.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/analytics/reports/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/analytics/reports/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/analytics/reports/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/analytics/reports/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/analytics/reports/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/analytics/reports/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/analytics/exports/tickets.csv": {
      "get": {
        "tags": [
          "analytics/exports"
        ],
        "summary": "GET /api/analytics/exports/tickets.csv",
        "description": "List tickets.csv with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/exports/tickets.csv' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/exports/tickets.csv' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/exports/tickets.csv' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/exports/tickets.csv' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/exports/tickets.csv' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/analytics/exports/tickets.csv' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/notes": {
      "get": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "List notes",
        "description": "List notes across tickets.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "ticket_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_internal",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "created_from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "created_to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketNote"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketNote"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "Create notes (array)",
        "description": "Create one or more notes across tickets. Body must be an array of note objects.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketNote"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/notes' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/notes' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/notes' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketNote"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/notes' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/notes' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/notes' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "ticket_id",
                    "body"
                  ],
                  "properties": {
                    "ticket_id": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "body": {
                      "type": "string"
                    },
                    "is_internal": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              },
              "example": [
                {
                  "ticket_id": "00000000-0000-0000-0000-000000000123",
                  "body": "Note A"
                },
                {
                  "ticket_id": "00000000-0000-0000-0000-000000000124",
                  "body": "Note B",
                  "is_internal": true
                }
              ]
            }
          }
        }
      }
    },
    "/api/tickets/notes/{id}": {
      "get": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "GET /api/tickets/notes/:id",
        "description": "Get a note by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/notes/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Note not found"
                      },
                      "details": {
                        "id": "n1"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "PUT /api/tickets/notes/:id",
        "description": "Update an existing note.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/notes/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/notes/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/notes/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/notes/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/notes/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/notes/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Note not found"
                      },
                      "details": {
                        "id": "n1"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketNote"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "DELETE /api/tickets/notes/:id",
        "description": "Delete a note.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/notes/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/notes/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/notes/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/notes/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/notes/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/notes/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Note not found"
                      },
                      "details": {
                        "id": "n1"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/attachments": {
      "get": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "List attachments",
        "description": "List attachments across tickets.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "ticket_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploaded_by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file_type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploaded_from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "uploaded_to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketAttachment"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketAttachment"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "Create attachments (array)",
        "description": "Create one or more attachments across tickets. Body must be an array of attachment objects.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketAttachment"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/attachments' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/attachments' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/attachments' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketAttachment"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/attachments' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/attachments' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/attachments' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "ticket_id",
                    "file_name",
                    "file_type",
                    "file_size_bytes",
                    "storage_path"
                  ],
                  "properties": {
                    "ticket_id": {
                      "type": "string"
                    },
                    "file_name": {
                      "type": "string"
                    },
                    "file_type": {
                      "type": "string"
                    },
                    "file_size_bytes": {
                      "type": "integer"
                    },
                    "storage_path": {
                      "type": "string"
                    },
                    "uploaded_by": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              },
              "example": [
                {
                  "ticket_id": "00000000-0000-0000-0000-000000000123",
                  "file_name": "a.txt",
                  "file_type": "text/plain",
                  "file_size_bytes": 100,
                  "storage_path": "/store/a.txt"
                }
              ]
            }
          }
        }
      }
    },
    "/api/tickets/attachments/{id}": {
      "get": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "GET /api/tickets/attachments/:id",
        "description": "Get a attachment by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/attachments/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Attachment not found"
                      },
                      "details": {
                        "id": "a1"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "PUT /api/tickets/attachments/:id",
        "description": "Update an existing attachment.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/attachments/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/attachments/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/attachments/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/attachments/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/attachments/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/attachments/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Attachment not found"
                      },
                      "details": {
                        "id": "a1"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketAttachment"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "DELETE /api/tickets/attachments/:id",
        "description": "Delete a attachment.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/attachments/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/attachments/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/attachments/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/attachments/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/attachments/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/attachments/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Attachment not found"
                      },
                      "details": {
                        "id": "a1"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/watchers": {
      "get": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "List ticket watchers",
        "description": "List ticket watchers across system.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "ticket_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "name": "notify",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketWatcher"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketWatcher"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "Create watchers (array)",
        "description": "Create one or more watchers across tickets. Body must be an array of watcher objects (each with ticket_id and either user_id or email).",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketWatcher"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketWatcher"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ticket_id": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "nullable": true
                    },
                    "notify": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "anyOf": [
                    {
                      "required": [
                        "ticket_id",
                        "user_id"
                      ]
                    },
                    {
                      "required": [
                        "ticket_id",
                        "email"
                      ]
                    }
                  ]
                }
              },
              "example": [
                {
                  "ticket_id": "00000000-0000-0000-0000-000000000123",
                  "email": "watch@domain.test"
                }
              ]
            }
          }
        }
      }
    },
    "/api/tickets/watchers/ticket/{ticketId}/email": {
      "post": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "POST /api/tickets/watchers/ticket/:ticketId/email",
        "description": "Operation on email.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: ticketId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketWatcher"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers/ticket/:ticketId/email' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers/ticket/:ticketId/email' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers/ticket/:ticketId/email' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketWatcher"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers/ticket/:ticketId/email' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers/ticket/:ticketId/email' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/watchers/ticket/:ticketId/email' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/{ticketId}/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/{ticketId}/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/{ticketId}/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/{ticketId}/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/{ticketId}/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketWatcher"
              }
            }
          }
        }
      }
    },
    "/api/tickets/watchers/{id}": {
      "get": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "GET /api/tickets/watchers/:id",
        "description": "Get a watcher by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/watchers/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Watcher not found"
                      },
                      "details": {
                        "id": "w1"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "PUT /api/tickets/watchers/:id",
        "description": "Update an existing watcher.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/watchers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/watchers/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/watchers/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/watchers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/watchers/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/watchers/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Watcher not found"
                      },
                      "details": {
                        "id": "w1"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketWatcher"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "DELETE /api/tickets/watchers/:id",
        "description": "Delete a watcher.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/watchers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/watchers/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/watchers/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/watchers/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/watchers/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/watchers/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Watcher not found"
                      },
                      "details": {
                        "id": "w1"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/events": {
      "get": {
        "tags": [
          "tickets/events"
        ],
        "summary": "GET /api/tickets/events",
        "description": "List events with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets/events"
        ],
        "summary": "POST /api/tickets/events",
        "description": "Create a new event.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/events' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/events' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/events' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/events' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/events' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/events' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/events/{id}": {
      "get": {
        "tags": [
          "tickets/events"
        ],
        "summary": "GET /api/tickets/events/:id",
        "description": "Get a event by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/events/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tickets/events"
        ],
        "summary": "PUT /api/tickets/events/:id",
        "description": "Update an existing event.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/events/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/events/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/events/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/events/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/events/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/events/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tickets/events"
        ],
        "summary": "DELETE /api/tickets/events/:id",
        "description": "Delete a event.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/events/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/events/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/events/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/events/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/events/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/events/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets": {
      "get": {
        "tags": [
          "tickets"
        ],
        "summary": "List tickets",
        "description": "List tickets with advanced filters and pagination.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "ticket_key",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Exact ticket key (e.g., HD-2025-0001)"
          },
          {
            "name": "status_code",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by status code (open, pending, closed, …)"
          },
          {
            "name": "priority_code",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by priority code (low, medium, high, …)"
          },
          {
            "name": "severity_code",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by severity code (minor, major, …)"
          },
          {
            "name": "system_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "UUID of system"
          },
          {
            "name": "module_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "UUID of system module"
          },
          {
            "name": "category_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "UUID of issue category"
          },
          {
            "name": "status_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "UUID of status"
          },
          {
            "name": "priority_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "UUID of priority"
          },
          {
            "name": "severity_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "UUID of severity"
          },
          {
            "name": "assigned_agent_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "UUID of assigned agent"
          },
          {
            "name": "group_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Support group id"
          },
          {
            "name": "tier_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Tier id"
          },
          {
            "name": "source_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Source id"
          },
          {
            "name": "unassigned",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "description": "Only tickets without assigned agent (true)"
          },
          {
            "name": "reporter_email",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "email"
            },
            "description": "Filter by reporter email"
          },
          {
            "name": "created_from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Created at >= (ISO)"
          },
          {
            "name": "created_to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Created at <= (ISO)"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at ASC",
                "created_at DESC",
                "updated_at ASC",
                "updated_at DESC",
                "ticket_key ASC",
                "ticket_key DESC",
                "priority_id ASC",
                "priority_id DESC",
                "severity_id ASC",
                "severity_id DESC",
                "status_id ASC",
                "status_id DESC"
              ]
            },
            "description": "Safe sort fields with direction"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets"
        ],
        "summary": "Create ticket (with related objects)",
        "description": "Create a ticket and optionally include related notes, attachments, and watchers in one request.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "validation": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Validation failed"
                      },
                      "details": {
                        "missing": [
                          "title",
                          "description"
                        ]
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Alias for reporter_email"
                  },
                  "reporter_email": {
                    "type": "string",
                    "format": "email"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "reporter_user_id": {
                    "type": "string"
                  },
                  "system_id": {
                    "type": "string"
                  },
                  "module_id": {
                    "type": "string"
                  },
                  "category_id": {
                    "type": "string"
                  },
                  "priority_id": {
                    "type": "string"
                  },
                  "severity_id": {
                    "type": "string"
                  },
                  "status_id": {
                    "type": "string"
                  },
                  "group_id": {
                    "type": "integer"
                  },
                  "tier_id": {
                    "type": "integer"
                  },
                  "source_id": {
                    "type": "integer"
                  },
                  "source_code": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "body"
                      ],
                      "properties": {
                        "body": {
                          "type": "string"
                        },
                        "is_internal": {
                          "type": "boolean"
                        },
                        "user_id": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "description": "Optional notes to add to the ticket."
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "file_name",
                        "file_type",
                        "file_size_bytes",
                        "storage_path"
                      ],
                      "properties": {
                        "file_name": {
                          "type": "string"
                        },
                        "file_type": {
                          "type": "string"
                        },
                        "file_size_bytes": {
                          "type": "integer"
                        },
                        "storage_path": {
                          "type": "string"
                        },
                        "uploaded_by": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "description": "Optional attachment records to add."
                  },
                  "watchers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "nullable": true
                        },
                        "notify": {
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "user_id"
                          ]
                        },
                        {
                          "required": [
                            "email"
                          ]
                        }
                      ]
                    },
                    "description": "Optional watchers to subscribe to updates."
                  }
                },
                "additionalProperties": false
              },
              "example": {
                "title": "Printer jam",
                "description": "Paper jam after 3 pages",
                "reporter_email": "user@domain.test",
                "source_code": "agent_reporting",
                "notes": [
                  {
                    "body": "Initial triage",
                    "is_internal": true
                  }
                ],
                "attachments": [
                  {
                    "file_name": "error.jpg",
                    "file_type": "image/jpeg",
                    "file_size_bytes": 12345,
                    "storage_path": "/store/x/y.jpg"
                  }
                ],
                "watchers": [
                  {
                    "email": "watcher@domain.test"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id",
        "description": "Get a ticket by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "PUT /api/tickets/:id",
        "description": "Update an existing ticket.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "DELETE /api/tickets/:id",
        "description": "Delete a ticket.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/assign": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/assign",
        "description": "Operation on assign.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/assign' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/assign' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/assign' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/assign' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/assign' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/assign' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/assign",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/release": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/release",
        "description": "Operation on release.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/release' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/release' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/release' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/release' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/release' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/release' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/release",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/claim": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/claim",
        "description": "Operation on claim.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/claim' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/claim' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/claim' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/claim' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/claim' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/claim' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/claim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/unclaim": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/unclaim",
        "description": "Operation on unclaim.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/unclaim' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/unclaim' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/unclaim' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/unclaim' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/unclaim' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/unclaim' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/unclaim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/status": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/status",
        "description": "Operation on status.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/status' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/status' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/status' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/status' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/status' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/status' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/status",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/priority": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/priority",
        "description": "Operation on priority.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/priority' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/priority' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/priority' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/priority' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/priority' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/priority' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/priority",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/severity": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/severity",
        "description": "Operation on severity.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/severity' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/severity' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/severity' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/severity' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/severity' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/severity' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/severity",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/notes": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id/notes",
        "description": "Get a note by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/notes' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/notes' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/notes' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/notes' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/notes' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/notes' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/notes",
        "description": "Operation on notes.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/notes' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/notes' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/notes' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/notes' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/notes' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/notes' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketNote"
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/watchers": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id/watchers",
        "description": "Get a watcher by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/watchers' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/watchers' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/watchers' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/watchers' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/watchers' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/watchers' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/watchers",
        "description": "Operation on watchers.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/watchers' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/watchers' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/watchers' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/watchers' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/watchers' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/watchers' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketWatcher"
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/attachments": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id/attachments",
        "description": "Get a attachment by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/attachments' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/attachments' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/attachments' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/attachments' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/attachments' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/attachments' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/attachments",
        "description": "Operation on attachments.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/attachments' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/attachments' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/attachments' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/attachments' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/attachments' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/attachments' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketAttachment"
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/events": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id/events",
        "description": "Get a event by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/events' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/events' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/events' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/events' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/events' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tickets/:id/events' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/close": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/close",
        "description": "Operation on close.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/close' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/close' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/close' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/close' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/close' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/close' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/close",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/reopen": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/reopen",
        "description": "Operation on reopen.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/reopen' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/reopen' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/reopen' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/reopen' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/reopen' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tickets/:id/reopen' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/reopen",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/notes/{nid}": {
      "put": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "PUT /api/tickets/:id/notes/:nid",
        "description": "Update an existing note.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "nid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: nid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/notes/:nid' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/notes/:nid' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/notes/:nid' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/notes/:nid' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/notes/:nid' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/notes/:nid' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/notes/{nid}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketNote"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "DELETE /api/tickets/:id/notes/:nid",
        "description": "Delete a note.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "nid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: nid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/notes/:nid' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/notes/:nid' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/notes/:nid' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketNote"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/notes/:nid' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/notes/:nid' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/notes/:nid' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/notes/{nid}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/attachments/{aid}": {
      "put": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "PUT /api/tickets/:id/attachments/:aid",
        "description": "Update an existing attachment.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "aid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: aid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/attachments/:aid' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/attachments/:aid' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/attachments/:aid' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/attachments/:aid' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/attachments/:aid' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/attachments/:aid' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/attachments/{aid}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketAttachment"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "DELETE /api/tickets/:id/attachments/:aid",
        "description": "Delete a attachment.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "aid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: aid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/attachments/:aid' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/attachments/:aid' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/attachments/:aid' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketAttachment"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/attachments/:aid' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/attachments/:aid' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tickets/:id/attachments/:aid' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/attachments/{aid}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tickets/{id}/watchers/{wid}": {
      "put": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "PUT /api/tickets/:id/watchers/:wid",
        "description": "Update an existing watcher.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "wid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: wid"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/watchers/:wid' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/watchers/:wid' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/watchers/:wid' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketWatcher"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/watchers/:wid' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/watchers/:wid' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tickets/:id/watchers/:wid' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/{id}/watchers/{wid}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketWatcher"
              }
            }
          }
        }
      }
    },
    "/api/system/users/permissions": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/permissions",
        "description": "List permissions with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/permissions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/permissions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/permissions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/permissions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/permissions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/permissions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/system/users/{id}/permissions": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id/permissions",
        "description": "Get a permission by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/permissions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/permissions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/permissions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/permissions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/permissions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/permissions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/users": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users",
        "description": "List users with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/users"
        ],
        "summary": "Create user (supports nested roles, single tier, support_groups)",
        "description": "Create a user. If 'roles', 'tiers', or 'support_groups' arrays are provided, they will be reconciled atomically. Users can belong to only one support tier; if tiers/support_groups are provided but no roles, the Agent role will be added automatically when available.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{\"email\":\"agent1@example.com\",\"full_name\":\"Agent One\",\"roles\":[\"agent\"],\"tiers\":[{\"name\":\"Tier 1\"}],\"support_groups\":[{\"name\":\"Service Desk\"}]}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{\"email\":\"agent1@example.com\",\"full_name\":\"Agent One\",\"roles\":[\"agent\"],\"tiers\":[{\"name\":\"Tier 1\"}],\"support_groups\":[{\"name\":\"Service Desk\"}]}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{\"email\":\"agent1@example.com\",\"full_name\":\"Agent One\",\"roles\":[\"agent\"],\"tiers\":[{\"name\":\"Tier 1\"}],\"support_groups\":[{\"name\":\"Service Desk\"}]}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{\"email\":\"agent1@example.com\",\"full_name\":\"Agent One\",\"roles\":[\"agent\"],\"tiers\":[{\"name\":\"Tier 1\"}],\"support_groups\":[{\"name\":\"Service Desk\"}]}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{\"email\":\"agent1@example.com\",\"full_name\":\"Agent One\",\"roles\":[\"agent\"],\"tiers\":[{\"name\":\"Tier 1\"}],\"support_groups\":[{\"name\":\"Service Desk\"}]}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{\"email\":\"agent1@example.com\",\"full_name\":\"Agent One\",\"roles\":[\"agent\"],\"tiers\":[{\"name\":\"Tier 1\"}],\"support_groups\":[{\"name\":\"Service Desk\"}]}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "description": "Plaintext password; hashed server-side"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "roles": {
                    "type": "array",
                    "description": "Roles to assign. Accepts role UUIDs, codes, names, or objects with id/code/name.",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "code": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "tiers": {
                    "type": "array",
                    "maxItems": 1,
                    "description": "Single support tier to add. Accepts numeric IDs, names, or objects with id/name.",
                    "items": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "support_groups": {
                    "type": "array",
                    "description": "Support groups to add. Accepts numeric IDs, names, or objects with id/name.",
                    "items": {
                      "oneOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "additionalProperties": false
              },
              "example": {
                "email": "new.agent@example.com",
                "full_name": "New Agent",
                "is_active": true,
                "roles": [
                  "agent"
                ],
                "tiers": [
                  {
                    "name": "Tier 1"
                  }
                ],
                "support_groups": [
                  {
                    "name": "Service Desk"
                  },
                  2
                ]
              }
            }
          }
        }
      }
    },
    "/api/system/users/{id}": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id",
        "description": "Get a user by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/users"
        ],
        "summary": "PUT /api/system/users/:id",
        "description": "Update an existing user.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/users/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/users/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/users/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/users/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/users/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/users/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/users"
        ],
        "summary": "DELETE /api/system/users/:id",
        "description": "Delete a user.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/users/{id}/roles": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id/roles",
        "description": "Get a role by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/roles' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/roles' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/roles' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/roles' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/roles' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/roles' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/users"
        ],
        "summary": "POST /api/system/users/:id/roles",
        "description": "Operation on roles.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/roles' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/roles' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/roles' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/roles' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/roles' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/roles' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        }
      }
    },
    "/api/system/users/{id}/roles/{roleId}": {
      "delete": {
        "tags": [
          "system/users"
        ],
        "summary": "DELETE /api/system/users/:id/roles/:roleId",
        "description": "Delete a role.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: roleId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/roles/:roleId' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/roles/:roleId' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/roles/:roleId' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/roles/:roleId' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/roles/:roleId' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/roles/:roleId' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/roles/{roleId}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/users/{id}/tiers": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id/tiers",
        "description": "Get a tier by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/tiers' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/tiers' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/tiers' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/tiers' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/tiers' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/tiers' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/users"
        ],
        "summary": "POST /api/system/users/:id/tiers",
        "description": "Operation on tiers.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/tiers' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/tiers' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/tiers' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/tiers' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/tiers' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/tiers' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "/api/system/users/{id}/tiers/{tierId}": {
      "delete": {
        "tags": [
          "system/users"
        ],
        "summary": "DELETE /api/system/users/:id/tiers/:tierId",
        "description": "Delete a tier.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "tierId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: tierId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/tiers/:tierId' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/tiers/:tierId' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/tiers/:tierId' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/tiers/:tierId' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/tiers/:tierId' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/tiers/:tierId' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/tiers/{tierId}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/users/{id}/support-groups": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id/support-groups",
        "description": "Get a support-group by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/support-groups' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/support-groups' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/support-groups' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/support-groups' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/support-groups' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/users/:id/support-groups' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/users"
        ],
        "summary": "POST /api/system/users/:id/support-groups",
        "description": "Operation on support-groups.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/support-groups' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/support-groups' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/support-groups' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/support-groups' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/support-groups' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/users/:id/support-groups' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "/api/system/users/{id}/support-groups/{groupId}": {
      "delete": {
        "tags": [
          "system/users"
        ],
        "summary": "DELETE /api/system/users/:id/support-groups/:groupId",
        "description": "Delete a support-group.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: groupId"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/support-groups/:groupId' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/support-groups/:groupId' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/support-groups/:groupId' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/support-groups/:groupId' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/support-groups/:groupId' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/users/:id/support-groups/:groupId' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/{id}/support-groups/{groupId}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/roles": {
      "get": {
        "tags": [
          "system/roles"
        ],
        "summary": "GET /api/system/roles",
        "description": "List roles with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/roles"
        ],
        "summary": "Create role (supports nested permissions)",
        "description": "Create a role. If a 'permissions' array of codes (or objects with code) is provided, permissions will be assigned atomically.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "permissions": {
                    "type": "array",
                    "description": "Permission codes to grant. Items may be strings or objects with a 'code' property.",
                    "items": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "code"
                          ]
                        }
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/api/system/roles/{id}": {
      "get": {
        "tags": [
          "system/roles"
        ],
        "summary": "GET /api/system/roles/:id",
        "description": "Get a role by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/roles"
        ],
        "summary": "PUT /api/system/roles/:id",
        "description": "Update an existing role.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/roles/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/roles/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/roles/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/roles/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/roles/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/roles/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/roles"
        ],
        "summary": "DELETE /api/system/roles/:id",
        "description": "Delete a role.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/roles/permissions/catalog": {
      "get": {
        "tags": [
          "system/roles"
        ],
        "summary": "GET /api/system/roles/permissions/catalog",
        "description": "List catalog with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/permissions/catalog' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/permissions/catalog' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/permissions/catalog' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/permissions/catalog' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/permissions/catalog' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/permissions/catalog' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/system/roles/{id}/permissions": {
      "get": {
        "tags": [
          "system/roles"
        ],
        "summary": "GET /api/system/roles/:id/permissions",
        "description": "Get a permission by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id/permissions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id/permissions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id/permissions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id/permissions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id/permissions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/roles/:id/permissions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/{id}/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/roles"
        ],
        "summary": "POST /api/system/roles/:id/permissions",
        "description": "Operation on permissions.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles/:id/permissions' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles/:id/permissions' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles/:id/permissions' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles/:id/permissions' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles/:id/permissions' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/roles/:id/permissions' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/{id}/permissions",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          }
        }
      }
    },
    "/api/system/roles/{id}/permissions/{permission_name}": {
      "delete": {
        "tags": [
          "system/roles"
        ],
        "summary": "DELETE /api/system/roles/:id/permissions/:permission_name",
        "description": "Delete a permission.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "permission_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: permission_name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id/permissions/:permission_name' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id/permissions/:permission_name' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id/permissions/:permission_name' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id/permissions/:permission_name' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id/permissions/:permission_name' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/roles/:id/permissions/:permission_name' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/{id}/permissions/{permission_name}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/settings/smtp": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/smtp",
        "description": "List smtp with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/smtp' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/smtp' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/smtp' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/smtp' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/smtp' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/smtp' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/smtp",
        "description": "Operation on smtp.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/smtp' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/smtp' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/smtp' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/smtp' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/smtp' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/smtp' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/general": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/general",
        "description": "List general with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/general' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/general' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/general' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/general' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/general' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/general' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/general",
        "description": "Operation on general.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/general' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/general' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/general' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/general' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/general' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/general' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/notifications": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/notifications",
        "description": "List notifications with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/notifications' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/notifications' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/notifications' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/notifications' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/notifications' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/notifications' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/notifications",
        "description": "Operation on notifications.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/notifications' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/notifications' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/notifications' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/notifications' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/notifications' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/notifications' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/security": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/security",
        "description": "List security with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/security",
        "description": "Operation on security.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/security/api-keys": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/security/api-keys",
        "description": "List api-keys with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/settings"
        ],
        "summary": "POST /api/system/settings/security/api-keys",
        "description": "Create a new api-key.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/security/api-keys/{id}": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/security/api-keys/:id",
        "description": "Get a api-key by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/security/api-keys/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/security/api-keys/:id",
        "description": "Update an existing api-key.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security/api-keys/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/security/api-keys/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/settings"
        ],
        "summary": "DELETE /api/system/settings/security/api-keys/:id",
        "description": "Delete a api-key.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/settings/security/api-keys/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/settings/security/api-keys/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/settings/security/api-keys/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/settings/security/api-keys/{id}/activate": {
      "post": {
        "tags": [
          "system/settings"
        ],
        "summary": "POST /api/system/settings/security/api-keys/:id/activate",
        "description": "Operation on activate.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/activate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/activate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/activate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/activate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/activate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/activate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/{id}/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/security/api-keys/{id}/deactivate": {
      "post": {
        "tags": [
          "system/settings"
        ],
        "summary": "POST /api/system/settings/security/api-keys/:id/deactivate",
        "description": "Operation on deactivate.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/deactivate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/deactivate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/deactivate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/deactivate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/deactivate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/deactivate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/{id}/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/security/api-keys/{id}/rotate": {
      "post": {
        "tags": [
          "system/settings"
        ],
        "summary": "POST /api/system/settings/security/api-keys/:id/rotate",
        "description": "Operation on rotate.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/rotate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/rotate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/rotate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingKV"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/rotate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/rotate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/settings/security/api-keys/:id/rotate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/{id}/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/auth-methods": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/auth-methods",
        "description": "List auth-methods with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/auth-methods' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/auth-methods' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/auth-methods' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/auth-methods' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/auth-methods' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/auth-methods' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/auth-methods",
        "description": "Operation on auth-methods.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/auth-methods' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/auth-methods' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/auth-methods' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/auth-methods' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/auth-methods' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/auth-methods' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/sso": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/sso",
        "description": "List sso with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/sso' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/sso' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/sso' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/sso' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/sso' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/sso' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/sso",
        "description": "Operation on sso.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/sso' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/sso' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/sso' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/sso' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/sso' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/sso' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/branding": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/branding",
        "description": "List branding with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/branding' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/branding' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/branding' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/branding' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/branding' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/branding' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/branding",
        "description": "Operation on branding.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/branding' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/branding' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/branding' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/branding' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/branding' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/branding' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/settings/email-templates": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/email-templates",
        "description": "List email-templates with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/email-templates' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/email-templates' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/email-templates' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/email-templates' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/email-templates' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/settings/email-templates' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/email-templates",
        "description": "Operation on email-templates.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/email-templates' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/email-templates' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/email-templates' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SettingKV"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/email-templates' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/email-templates' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/settings/email-templates' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/workflows/rules": {
      "get": {
        "tags": [
          "system/workflows"
        ],
        "summary": "GET /api/system/workflows/rules",
        "description": "List rules with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowRule"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowRule"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/workflows"
        ],
        "summary": "POST /api/system/workflows/rules",
        "description": "Create a new rule.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowRule"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowRule"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/workflows/rules/{id}": {
      "get": {
        "tags": [
          "system/workflows"
        ],
        "summary": "GET /api/system/workflows/rules/:id",
        "description": "Get a rule by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/rules/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/workflows"
        ],
        "summary": "PUT /api/system/workflows/rules/:id",
        "description": "Update an existing rule.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/workflows/rules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/workflows/rules/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/workflows/rules/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/workflows/rules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/workflows/rules/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/workflows/rules/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/workflows"
        ],
        "summary": "DELETE /api/system/workflows/rules/:id",
        "description": "Delete a rule.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/workflows/rules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/workflows/rules/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/workflows/rules/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/workflows/rules/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/workflows/rules/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/workflows/rules/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/workflows/rules/{id}/enable": {
      "post": {
        "tags": [
          "system/workflows"
        ],
        "summary": "POST /api/system/workflows/rules/:id/enable",
        "description": "Operation on enable.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/enable' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/enable' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/enable' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/enable' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/enable' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/enable' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/{id}/enable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/workflows/rules/{id}/disable": {
      "post": {
        "tags": [
          "system/workflows"
        ],
        "summary": "POST /api/system/workflows/rules/:id/disable",
        "description": "Operation on disable.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/disable' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/disable' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/disable' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/disable' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/disable' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/disable' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/{id}/disable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/workflows/rules/{id}/test": {
      "post": {
        "tags": [
          "system/workflows"
        ],
        "summary": "POST /api/system/workflows/rules/:id/test",
        "description": "Operation on test.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/test' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/test' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/test' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRule"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/test' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/test' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/workflows/rules/:id/test' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/{id}/test",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/workflows/conditions": {
      "get": {
        "tags": [
          "system/workflows"
        ],
        "summary": "GET /api/system/workflows/conditions",
        "description": "List conditions with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowRule"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/conditions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/conditions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/conditions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowRule"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/conditions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/conditions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/conditions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/system/workflows/actions": {
      "get": {
        "tags": [
          "system/workflows"
        ],
        "summary": "GET /api/system/workflows/actions",
        "description": "List actions with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowRule"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/actions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/actions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/actions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowRule"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/actions' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/actions' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/workflows/actions' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/system/inbox/emails": {
      "get": {
        "tags": [
          "system/inbox"
        ],
        "summary": "GET /api/system/inbox/emails",
        "description": "List emails with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InboxEmail"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InboxEmail"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/inbox"
        ],
        "summary": "POST /api/system/inbox/emails",
        "description": "Create a new email.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InboxEmail"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InboxEmail"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/inbox/emails/{id}": {
      "get": {
        "tags": [
          "system/inbox"
        ],
        "summary": "GET /api/system/inbox/emails/:id",
        "description": "Get a email by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/inbox/emails/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/inbox"
        ],
        "summary": "PUT /api/system/inbox/emails/:id",
        "description": "Update an existing email.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/inbox/emails/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/inbox/emails/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/inbox/emails/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/inbox/emails/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/inbox/emails/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/inbox/emails/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/inbox"
        ],
        "summary": "DELETE /api/system/inbox/emails/:id",
        "description": "Delete a email.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/inbox/emails/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/inbox/emails/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/inbox/emails/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/inbox/emails/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/inbox/emails/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/inbox/emails/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/inbox/emails/{id}/process": {
      "post": {
        "tags": [
          "system/inbox"
        ],
        "summary": "POST /api/system/inbox/emails/:id/process",
        "description": "Operation on process.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/process' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/process' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/process' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/process' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/process' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/process' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/{id}/process",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/inbox/emails/{id}/retry": {
      "post": {
        "tags": [
          "system/inbox"
        ],
        "summary": "POST /api/system/inbox/emails/:id/retry",
        "description": "Operation on retry.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/retry' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/retry' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/retry' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/retry' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/retry' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/retry' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/{id}/retry",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/inbox/emails/{id}/fail": {
      "post": {
        "tags": [
          "system/inbox"
        ],
        "summary": "POST /api/system/inbox/emails/:id/fail",
        "description": "Operation on fail.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/fail' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/fail' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/fail' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxEmail"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/fail' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/fail' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/inbox/emails/:id/fail' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/{id}/fail",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/files": {
      "get": {
        "tags": [
          "system/files"
        ],
        "summary": "GET /api/system/files",
        "description": "List files with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "system/files"
        ],
        "summary": "POST /api/system/files",
        "description": "Create a new file.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/files' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/files' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/files' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/files' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/files' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/system/files' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      }
    },
    "/api/system/files/{id}": {
      "get": {
        "tags": [
          "system/files"
        ],
        "summary": "GET /api/system/files/:id",
        "description": "Get a file by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/files/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "system/files"
        ],
        "summary": "PUT /api/system/files/:id",
        "description": "Update an existing file.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/files/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/files/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/files/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/files/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/files/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/system/files/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "system/files"
        ],
        "summary": "DELETE /api/system/files/:id",
        "description": "Delete a file.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/files/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/files/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/files/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/files/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/files/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/system/files/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/system/audit": {
      "get": {
        "tags": [
          "system/audit"
        ],
        "summary": "GET /api/system/audit",
        "description": "List audit with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditEvent"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditEvent"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/system/audit/{id}": {
      "get": {
        "tags": [
          "system/audit"
        ],
        "summary": "GET /api/system/audit/:id",
        "description": "Get a audit by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditEvent"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditEvent"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/system/audit/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/me": {
      "get": {
        "tags": [
          "admin/me"
        ],
        "summary": "GET /api/admin/me",
        "description": "List me with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/me' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/me' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/me' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/me' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/me' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/me' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin/me"
        ],
        "summary": "PUT /api/admin/me",
        "description": "Operation on me.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/me' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/me' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/me' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/me' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/me' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/me' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/preferences": {
      "get": {
        "tags": [
          "admin/preferences"
        ],
        "summary": "GET /api/admin/preferences",
        "description": "List preferences with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/preferences' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/preferences' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/preferences' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/preferences' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/preferences' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/preferences' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin/preferences"
        ],
        "summary": "PUT /api/admin/preferences",
        "description": "Operation on preferences.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/preferences' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/preferences' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/preferences' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/preferences' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/preferences' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/admin/preferences' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/notifications": {
      "get": {
        "tags": [
          "admin/notifications"
        ],
        "summary": "GET /api/admin/notifications",
        "description": "List notifications with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/notifications' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/notifications' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/notifications' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/notifications' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/notifications' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/admin/notifications' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/public/ping": {
      "get": {
        "tags": [
          "public/ping"
        ],
        "summary": "GET /api/public/ping",
        "description": "List ping with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/ping' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/ping' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/ping' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/ping'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/ping' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/ping' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/ping' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/ping'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/public/endpoints": {
      "get": {
        "tags": [
          "public/endpoints"
        ],
        "summary": "GET /api/public/endpoints",
        "description": "List endpoints with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/endpoints' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/endpoints' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/endpoints' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/endpoints'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/endpoints' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/endpoints' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/endpoints' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/endpoints'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/public/tickets": {
      "get": {
        "tags": [
          "public/tickets"
        ],
        "summary": "GET /api/public/tickets",
        "description": "List tickets with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "public/tickets"
        ],
        "summary": "POST /api/public/tickets",
        "description": "Create a new ticket.",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/public/tickets' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/public/tickets' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/public/tickets' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/public/tickets' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/public/tickets' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/public/tickets' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/public/tickets' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/public/tickets' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "validation": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Validation failed"
                      },
                      "details": {
                        "missing": [
                          "title",
                          "description"
                        ]
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "missing": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Missing required fields"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/tickets/lookup": {
      "get": {
        "tags": [
          "public/tickets"
        ],
        "summary": "GET /api/public/tickets/lookup",
        "description": "List lookup with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets/lookup' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets/lookup' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets/lookup' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets/lookup'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketList"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets/lookup' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets/lookup' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets/lookup' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/tickets/lookup'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "params": {
                              "type": "object",
                              "properties": {
                                "reference": {
                                  "type": "string",
                                  "description": "ticket reference/key"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "missingReference": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "reference is required"
                      },
                      "details": {
                        "params": {
                          "reference": "ticket reference/key"
                        }
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets/lookup",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "params": {
                              "type": "object",
                              "properties": {
                                "reference": {
                                  "type": "string",
                                  "description": "ticket reference/key"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "params": {
                              "type": "object",
                              "properties": {
                                "reference": {
                                  "type": "string",
                                  "description": "ticket reference/key"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "params": {
                              "type": "object",
                              "properties": {
                                "reference": {
                                  "type": "string",
                                  "description": "ticket reference/key"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets/lookup",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "params": {
                              "type": "object",
                              "properties": {
                                "reference": {
                                  "type": "string",
                                  "description": "ticket reference/key"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/faqs": {
      "get": {
        "tags": [
          "public/faqs"
        ],
        "summary": "List FAQs",
        "description": "List published FAQs.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "system_category_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FAQ"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FAQ"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/public/faqs/{id}": {
      "get": {
        "tags": [
          "public/faqs"
        ],
        "summary": "GET /api/public/faqs/:id",
        "description": "Get a faq by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FAQ"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FAQ"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/faqs/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/kb/articles": {
      "get": {
        "tags": [
          "public/kb"
        ],
        "summary": "List public KB articles",
        "description": "List published knowledge base articles.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KBArticle"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KBArticle"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/public/kb/articles/{id}": {
      "get": {
        "tags": [
          "public/kb"
        ],
        "summary": "GET /api/public/kb/articles/:id",
        "description": "Get a article by ID.",
        "security": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KBArticle"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles/:id'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KBArticle"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles/:id' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/articles/:id'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/public/kb/ratings/summary": {
      "get": {
        "tags": [
          "public/kb"
        ],
        "summary": "GET /api/public/kb/ratings/summary",
        "description": "List summary with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KBArticle"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/ratings/summary' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/ratings/summary' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/ratings/summary' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/ratings/summary'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KBArticle"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/ratings/summary' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/ratings/summary' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/ratings/summary' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/kb/ratings/summary'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/public/videos": {
      "get": {
        "tags": [
          "public/videos"
        ],
        "summary": "List public videos",
        "description": "List public videos.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "category_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "UUID"
          },
          {
            "name": "system_category_id",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Video"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Video"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/public/videos/categories": {
      "get": {
        "tags": [
          "public/videos"
        ],
        "summary": "GET /api/public/videos/categories",
        "description": "List categories with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Video"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos/categories' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos/categories' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos/categories' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos/categories'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Video"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos/categories' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos/categories' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos/categories' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/videos/categories'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/public/search": {
      "get": {
        "tags": [
          "public/search"
        ],
        "summary": "GET /api/public/search",
        "description": "List search with pagination and filtering.",
        "security": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/search' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/search' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/search' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/search'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/search' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/search' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/search' -u 'user@example.com:password'"
                  },
                  "publicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/public/search'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/api-keys": {
      "get": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "GET /api/tokens/api-keys",
        "description": "List api-keys with pagination and filtering.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyPublic"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyPublic"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "POST /api/tokens/api-keys",
        "description": "Create a new api-key.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyPublic"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiKeyPublic"
                  }
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {}
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "example": {
                "name": "CI Key",
                "scope": "system",
                "is_active": true
              }
            }
          }
        }
      }
    },
    "/api/tokens/api-keys/{id}": {
      "get": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "GET /api/tokens/api-keys/:id",
        "description": "Get a api-key by ID.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X GET 'http://localhost:8080/api/tokens/api-keys/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "API key not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "PUT /api/tokens/api-keys/:id",
        "description": "Update an existing api-key.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tokens/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tokens/api-keys/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tokens/api-keys/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tokens/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tokens/api-keys/:id' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X PUT 'http://localhost:8080/api/tokens/api-keys/:id' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "API key not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "example": {
                "name": "CI Key",
                "scope": "system",
                "is_active": true
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "DELETE /api/tokens/api-keys/:id",
        "description": "Delete a api-key.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tokens/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tokens/api-keys/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tokens/api-keys/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tokens/api-keys/:id' -H 'Authorization: Bearer $ACCESS_TOKEN'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tokens/api-keys/:id' -H 'X-API-Key: $API_KEY'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X DELETE 'http://localhost:8080/api/tokens/api-keys/:id' -u 'user@example.com:password'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "API key not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/api-keys/{id}/activate": {
      "post": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "POST /api/tokens/api-keys/:id/activate",
        "description": "Operation on activate.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/activate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/activate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/activate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/activate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/activate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/activate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "API key not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "example": {
                "name": "CI Key",
                "scope": "system",
                "is_active": true
              }
            }
          }
        }
      }
    },
    "/api/tokens/api-keys/{id}/deactivate": {
      "post": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "POST /api/tokens/api-keys/:id/deactivate",
        "description": "Operation on deactivate.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/deactivate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/deactivate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/deactivate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/deactivate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/deactivate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/deactivate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "API key not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "example": {
                "name": "CI Key",
                "scope": "system",
                "is_active": true
              }
            }
          }
        }
      }
    },
    "/api/tokens/api-keys/{id}/rotate": {
      "post": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "POST /api/tokens/api-keys/:id/rotate",
        "description": "Operation on rotate.",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Path parameter: id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/rotate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/rotate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/rotate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyPublic"
                },
                "examples": {
                  "bearerCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/rotate' -H 'Authorization: Bearer $ACCESS_TOKEN' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "apiKeyCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/rotate' -H 'X-API-Key: $API_KEY' -H 'Content-Type: application/json' -d '{}'"
                  },
                  "basicCurl": {
                    "value": "curl -s -X POST 'http://localhost:8080/api/tokens/api-keys/:id/rotate' -u 'user@example.com:password' -H 'Content-Type: application/json' -d '{}'"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "API key not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/{id}/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ErrorResponseBase"
                    },
                    {
                      "properties": {
                        "details": {
                          "type": "object",
                          "additionalProperties": true,
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "resource id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "example": {
                "name": "CI Key",
                "scope": "system",
                "is_active": true
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "uid"
      }
    },
    "schemas": {
      "ErrorResponseBase": {
        "type": "object",
        "required": [
          "ok",
          "error",
          "request_id",
          "path",
          "method",
          "timestamp"
        ],
        "properties": {
          "ok": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string",
                "example": "BAD_REQUEST"
              },
              "message": {
                "type": "string",
                "example": "Validation failed"
              }
            }
          },
          "details": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "request_id": {
            "type": "string",
            "example": "REQ-abc123"
          },
          "path": {
            "type": "string",
            "example": "/api/public/faqs"
          },
          "method": {
            "type": "string",
            "example": "GET"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Internal user id",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "full_name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "description": "Assigned roles; include permissions when expanded via 'expand=roles.permissions'"
          },
          "tiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentTier"
            },
            "description": "User's support tier memberships (max 1)."
          },
          "support_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentGroup"
            },
            "description": "User's support group memberships."
          }
        }
      },
      "AuthLoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthLoginResponse": {
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "user"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "AuthAccessToken": {
        "type": "object",
        "required": [
          "access_token"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          }
        }
      },
      "ApiKeyPublic": {
        "type": "object",
        "required": [
          "id",
          "name",
          "scope",
          "is_active",
          "prefix"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true,
            "format": "uuid"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "prefix": {
            "type": "string"
          }
        }
      },
      "ApiKeyWithSecret": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiKeyPublic"
          },
          {
            "type": "object",
            "required": [
              "api_key"
            ],
            "properties": {
              "api_key": {
                "type": "string"
              }
            }
          }
        ]
      },
      "KBArticle": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "created_by": {
            "type": "string",
            "nullable": true,
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FAQ": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "system_category_id": {
            "type": "integer",
            "nullable": true
          },
          "created_by": {
            "type": "string",
            "nullable": true,
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Video": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category_id": {
            "type": "string",
            "format": "uuid"
          },
          "system_category_id": {
            "type": "integer"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "duration_seconds": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SystemCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "System": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "SystemModule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "system_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Priority": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Role": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Permission": {
        "type": "object",
        "required": [
          "id",
          "code"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SettingKV": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "UserSession": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "user_agent": {
            "type": "string"
          },
          "ip_address": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AuditEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "actor_user_id": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InboxEmail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "received_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "AgentGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AgentTier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "WorkflowRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "trigger": {
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      },
      "TicketNote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ticket_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "is_internal": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TicketAttachment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ticket_id": {
            "type": "string"
          },
          "file_name": {
            "type": "string"
          },
          "file_type": {
            "type": "string"
          },
          "file_size_bytes": {
            "type": "integer"
          },
          "storage_path": {
            "type": "string"
          },
          "uploaded_by": {
            "type": "string"
          },
          "uploaded_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TicketWatcher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ticket_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "notify": {
            "type": "boolean"
          }
        }
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ticket_key": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "reporter_user_id": {
            "type": "string",
            "nullable": true
          },
          "assigned_agent_id": {
            "type": "string",
            "nullable": true
          },
          "status_id": {
            "type": "string"
          },
          "priority_id": {
            "type": "string"
          },
          "severity_id": {
            "type": "string"
          },
          "system_id": {
            "type": "string"
          },
          "module_id": {
            "type": "string"
          },
          "category_id": {
            "type": "string"
          },
          "group_id": {
            "type": "string"
          },
          "tier_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketNote"
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TicketAttachment"
            }
          },
          "reporter_user": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "assigned_agent": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "system": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "module": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "category": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "status": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "priority": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "severity": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "source": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "group": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "tier": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          }
        }
      },
      "TicketList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ticket"
            }
          },
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        }
      }
    }
  }
}