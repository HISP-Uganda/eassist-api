{
  "openapi": "3.0.3",
  "info": {
    "title": "eAssist API",
    "version": "10.0.1",
    "description": "Automatically generated OpenAPI spec based on Express routes, with manual overrides for selected endpoints.\n\n\nProjection:\n- Use select for bracket projection to choose nested fields and expansions in one param: select=users[id,email,roles[id,name,permissions[code]]]\n- Or use fields (comma list) and expand (comma list) separately. If both are provided, select takes precedence.\n- Special case: fields='*' returns full objects (bypass projection).",
    "x-build": null,
    "x-git-sha": "3aeb5901b56a"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth/login"
        ],
        "summary": "POST /api/auth/login",
        "description": "Create a new login.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/login",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "auth/refresh"
        ],
        "summary": "POST /api/auth/refresh",
        "description": "Create a new refresh.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/refresh",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "auth/logout"
        ],
        "summary": "POST /api/auth/logout",
        "description": "Create a new logout.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/logout",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "auth/me"
        ],
        "summary": "GET /api/auth/me",
        "description": "List me with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/auth/whoami": {
      "get": {
        "tags": [
          "auth/whoami"
        ],
        "summary": "GET /api/auth/whoami",
        "description": "List whoami with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/whoami",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/auth/request-password-reset": {
      "post": {
        "tags": [
          "auth/request-password-reset"
        ],
        "summary": "POST /api/auth/request-password-reset",
        "description": "Create a new request-password-reset.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/request-password-reset",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "tags": [
          "auth/reset-password"
        ],
        "summary": "POST /api/auth/reset-password",
        "description": "Create a new reset-password.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/auth/reset-password",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/system/lookups/statuses": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/statuses",
        "description": "List statuses with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/statuses",
        "description": "Create a new statuse.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/statuses/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/statuses/:id",
        "description": "Get a statuse by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/statuses/:id",
        "description": "Update an existing statuse.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/statuses/:id",
        "description": "Delete a statuse.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/statuses/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/priorities": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/priorities",
        "description": "List priorities with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/priorities",
        "description": "Create a new prioritie.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/priorities/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/priorities/:id",
        "description": "Get a prioritie by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/priorities/:id",
        "description": "Update an existing prioritie.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/priorities/:id",
        "description": "Delete a prioritie.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/priorities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/severities": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/severities",
        "description": "List severities with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/severities",
        "description": "Create a new severitie.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/severities/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/severities/:id",
        "description": "Get a severitie by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/severities/:id",
        "description": "Update an existing severitie.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/severities/:id",
        "description": "Delete a severitie.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/severities/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/sources": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/sources",
        "description": "List sources with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/sources",
        "description": "Create a new source.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/sources/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/sources/:id",
        "description": "Get a source by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/sources/:id",
        "description": "Update an existing source.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/sources/:id",
        "description": "Delete a source.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/sources/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/systems": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/systems",
        "description": "List systems with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/systems",
        "description": "Create a new system.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/systems/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/systems/:id",
        "description": "Get a system by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/systems/:id",
        "description": "Update an existing system.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/systems/:id",
        "description": "Delete a system.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/systems/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/system-modules": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/system-modules",
        "description": "List system-modules with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/system-modules",
        "description": "Create a new system-module.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/system-modules/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/system-modules/:id",
        "description": "Get a system-module by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/system-modules/:id",
        "description": "Update an existing system-module.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/system-modules/:id",
        "description": "Delete a system-module.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-modules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/issue-categories": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/issue-categories",
        "description": "List issue-categories with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/issue-categories",
        "description": "Create a new issue-categorie.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/issue-categories/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/issue-categories/:id",
        "description": "Get a issue-categorie by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/issue-categories/:id",
        "description": "Update an existing issue-categorie.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/issue-categories/:id",
        "description": "Delete a issue-categorie.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/issue-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/system-category": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/system-category",
        "description": "List system-category with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/system-category",
        "description": "Create a new system-category.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/system-category/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/system-category/:id",
        "description": "Get a system-category by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/system-category/:id",
        "description": "Update an existing system-category.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/system-category/:id",
        "description": "Delete a system-category.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/system-category/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/support-tiers": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/support-tiers",
        "description": "List support-tiers with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/support-tiers",
        "description": "Create a new support-tier.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/support-tiers/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/support-tiers/:id",
        "description": "Get a support-tier by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/support-tiers/:id",
        "description": "Update an existing support-tier.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/support-tiers/:id",
        "description": "Delete a support-tier.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-tiers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/support-groups": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/support-groups",
        "description": "List support-groups with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/support-groups",
        "description": "Create a new support-group.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/support-groups/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/support-groups/:id",
        "description": "Get a support-group by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/support-groups/:id",
        "description": "Update an existing support-group.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/support-groups/:id",
        "description": "Delete a support-group.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/support-groups/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/video-categories": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/video-categories",
        "description": "List video-categories with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "system/lookups"
        ],
        "summary": "POST /api/system/lookups/video-categories",
        "description": "Create a new video-categorie.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/lookups/video-categories/{id}": {
      "get": {
        "tags": [
          "system/lookups"
        ],
        "summary": "GET /api/system/lookups/video-categories/:id",
        "description": "Get a video-categorie by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "system/lookups"
        ],
        "summary": "PUT /api/system/lookups/video-categories/:id",
        "description": "Update an existing video-categorie.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/lookups"
        ],
        "summary": "DELETE /api/system/lookups/video-categories/:id",
        "description": "Delete a video-categorie.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/lookups/video-categories/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/analytics/dashboards/overview": {
      "get": {
        "tags": [
          "analytics/dashboards"
        ],
        "summary": "GET /api/analytics/dashboards/overview",
        "description": "List overview with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/overview",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/analytics/dashboards/by-category": {
      "get": {
        "tags": [
          "analytics/dashboards"
        ],
        "summary": "GET /api/analytics/dashboards/by-category",
        "description": "List by-category with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/dashboards/by-category",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/analytics/reports": {
      "get": {
        "tags": [
          "analytics/reports"
        ],
        "summary": "GET /api/analytics/reports",
        "description": "List reports with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "analytics/reports"
        ],
        "summary": "POST /api/analytics/reports",
        "description": "Create a new report.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/analytics/reports/{id}": {
      "put": {
        "tags": [
          "analytics/reports"
        ],
        "summary": "PUT /api/analytics/reports/:id",
        "description": "Update an existing report.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "analytics/reports"
        ],
        "summary": "DELETE /api/analytics/reports/:id",
        "description": "Delete a report.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/reports/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/analytics/exports/tickets.csv": {
      "get": {
        "tags": [
          "analytics/exports"
        ],
        "summary": "GET /api/analytics/exports/tickets.csv",
        "description": "List tickets.csv with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/analytics/exports/tickets.csv",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/notes": {
      "get": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "GET /api/tickets/notes",
        "description": "List notes with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "POST /api/tickets/notes",
        "description": "Create a new note.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/notes/{id}": {
      "get": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "GET /api/tickets/notes/:id",
        "description": "Get a note by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "PUT /api/tickets/notes/:id",
        "description": "Update an existing note.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tickets/notes"
        ],
        "summary": "DELETE /api/tickets/notes/:id",
        "description": "Delete a note.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/notes/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/attachments": {
      "get": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "GET /api/tickets/attachments",
        "description": "List attachments with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "POST /api/tickets/attachments",
        "description": "Create a new attachment.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/attachments/{id}": {
      "get": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "GET /api/tickets/attachments/:id",
        "description": "Get a attachment by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "PUT /api/tickets/attachments/:id",
        "description": "Update an existing attachment.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tickets/attachments"
        ],
        "summary": "DELETE /api/tickets/attachments/:id",
        "description": "Delete a attachment.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/attachments/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/watchers": {
      "get": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "GET /api/tickets/watchers",
        "description": "List watchers with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "POST /api/tickets/watchers",
        "description": "Create a new watcher.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/watchers/ticket/{ticketId}/email": {
      "post": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "POST /api/tickets/watchers/ticket/:ticketId/email",
        "description": "Operation on email.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/:ticketId/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/:ticketId/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/:ticketId/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/:ticketId/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/ticket/:ticketId/email",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/watchers/{id}": {
      "get": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "GET /api/tickets/watchers/:id",
        "description": "Get a watcher by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "PUT /api/tickets/watchers/:id",
        "description": "Update an existing watcher.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tickets/watchers"
        ],
        "summary": "DELETE /api/tickets/watchers/:id",
        "description": "Delete a watcher.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/watchers/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/events": {
      "get": {
        "tags": [
          "tickets/events"
        ],
        "summary": "GET /api/tickets/events",
        "description": "List events with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tickets/events"
        ],
        "summary": "POST /api/tickets/events",
        "description": "Create a new event.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/events/{id}": {
      "get": {
        "tags": [
          "tickets/events"
        ],
        "summary": "GET /api/tickets/events/:id",
        "description": "Get a event by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "tickets/events"
        ],
        "summary": "PUT /api/tickets/events/:id",
        "description": "Update an existing event.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tickets/events"
        ],
        "summary": "DELETE /api/tickets/events/:id",
        "description": "Delete a event.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/events/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets": {
      "get": {
        "tags": [
          "tickets"
        ],
        "summary": "GET /api/tickets",
        "description": "List tickets with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tickets"
        ],
        "summary": "POST /api/tickets",
        "description": "Create a new ticket.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "validation": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Validation failed"
                      },
                      "details": {
                        "missing": [
                          "title",
                          "description"
                        ]
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id",
        "description": "Get a ticket by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "PUT /api/tickets/:id",
        "description": "Update an existing ticket.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "DELETE /api/tickets/:id",
        "description": "Delete a ticket.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/assign": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/assign",
        "description": "Operation on assign.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/assign",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/assign",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/assign",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/assign",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/assign",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/release": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/release",
        "description": "Operation on release.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/release",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/release",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/release",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/release",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/release",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/claim": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/claim",
        "description": "Operation on claim.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/claim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/claim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/claim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/claim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/claim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/unclaim": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/unclaim",
        "description": "Operation on unclaim.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/unclaim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/unclaim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/unclaim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/unclaim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/unclaim",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/status": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/status",
        "description": "Operation on status.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/status",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/status",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/status",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/status",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/status",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/priority": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/priority",
        "description": "Operation on priority.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/priority",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/priority",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/priority",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/priority",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/priority",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/severity": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/severity",
        "description": "Operation on severity.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/severity",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/severity",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/severity",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/severity",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/severity",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/notes": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id/notes",
        "description": "Get a note by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/notes",
        "description": "Operation on notes.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/watchers": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id/watchers",
        "description": "Get a watcher by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/watchers",
        "description": "Operation on watchers.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/watchers/{wid}": {
      "delete": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "DELETE /api/tickets/:id/watchers/:wid",
        "description": "Delete a watcher.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "PUT /api/tickets/:id/watchers/:wid",
        "description": "Update an existing watcher.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/watchers/:wid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/attachments": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id/attachments",
        "description": "Get a attachment by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/attachments",
        "description": "Operation on attachments.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/events": {
      "get": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "GET /api/tickets/:id/events",
        "description": "Get a event by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/events",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/close": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/close",
        "description": "Operation on close.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/close",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/close",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/close",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/close",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/close",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/reopen": {
      "post": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "POST /api/tickets/:id/reopen",
        "description": "Operation on reopen.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/reopen",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/reopen",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/reopen",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/reopen",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/reopen",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/notes/{nid}": {
      "put": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "PUT /api/tickets/:id/notes/:nid",
        "description": "Update an existing note.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "DELETE /api/tickets/:id/notes/:nid",
        "description": "Delete a note.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/notes/:nid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tickets/{id}/attachments/{aid}": {
      "put": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "PUT /api/tickets/:id/attachments/:aid",
        "description": "Update an existing attachment.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tickets/:id"
        ],
        "summary": "DELETE /api/tickets/:id/attachments/:aid",
        "description": "Delete a attachment.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tickets/:id/attachments/:aid",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users/permissions": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/permissions",
        "description": "List permissions with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users/{id}/permissions": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id/permissions",
        "description": "Get a permission by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users",
        "description": "List users with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/users"
        ],
        "summary": "POST /api/system/users",
        "description": "Create a new user.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users/{id}": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id",
        "description": "Get a user by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/users"
        ],
        "summary": "PUT /api/system/users/:id",
        "description": "Update an existing user.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/users"
        ],
        "summary": "DELETE /api/system/users/:id",
        "description": "Delete a user.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users/{id}/roles": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id/roles",
        "description": "Get a role by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/users"
        ],
        "summary": "POST /api/system/users/:id/roles",
        "description": "Operation on roles.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users/{id}/roles/{roleId}": {
      "delete": {
        "tags": [
          "system/users"
        ],
        "summary": "DELETE /api/system/users/:id/roles/:roleId",
        "description": "Delete a role.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles/:roleId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles/:roleId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles/:roleId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles/:roleId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/roles/:roleId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users/{id}/tiers": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id/tiers",
        "description": "Get a tier by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/users"
        ],
        "summary": "POST /api/system/users/:id/tiers",
        "description": "Operation on tiers.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users/{id}/tiers/{tierId}": {
      "delete": {
        "tags": [
          "system/users"
        ],
        "summary": "DELETE /api/system/users/:id/tiers/:tierId",
        "description": "Delete a tier.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers/:tierId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers/:tierId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers/:tierId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers/:tierId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/tiers/:tierId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users/{id}/support-groups": {
      "get": {
        "tags": [
          "system/users"
        ],
        "summary": "GET /api/system/users/:id/support-groups",
        "description": "Get a support-group by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/users"
        ],
        "summary": "POST /api/system/users/:id/support-groups",
        "description": "Operation on support-groups.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/users/{id}/support-groups/{groupId}": {
      "delete": {
        "tags": [
          "system/users"
        ],
        "summary": "DELETE /api/system/users/:id/support-groups/:groupId",
        "description": "Delete a support-group.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups/:groupId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups/:groupId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups/:groupId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups/:groupId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/users/:id/support-groups/:groupId",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/roles": {
      "get": {
        "tags": [
          "system/roles"
        ],
        "summary": "GET /api/system/roles",
        "description": "List roles with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/roles"
        ],
        "summary": "POST /api/system/roles",
        "description": "Create a new role.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/roles/{id}": {
      "get": {
        "tags": [
          "system/roles"
        ],
        "summary": "GET /api/system/roles/:id",
        "description": "Get a role by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/roles"
        ],
        "summary": "PUT /api/system/roles/:id",
        "description": "Update an existing role.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/roles"
        ],
        "summary": "DELETE /api/system/roles/:id",
        "description": "Delete a role.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/roles/permissions/catalog": {
      "get": {
        "tags": [
          "system/roles"
        ],
        "summary": "GET /api/system/roles/permissions/catalog",
        "description": "List catalog with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/permissions/catalog",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/roles/{id}/permissions": {
      "get": {
        "tags": [
          "system/roles"
        ],
        "summary": "GET /api/system/roles/:id/permissions",
        "description": "Get a permission by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/roles"
        ],
        "summary": "POST /api/system/roles/:id/permissions",
        "description": "Operation on permissions.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/roles/{id}/permissions/{permission_name}": {
      "delete": {
        "tags": [
          "system/roles"
        ],
        "summary": "DELETE /api/system/roles/:id/permissions/:permission_name",
        "description": "Delete a permission.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions/:permission_name",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions/:permission_name",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions/:permission_name",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions/:permission_name",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/roles/:id/permissions/:permission_name",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/smtp": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/smtp",
        "description": "List smtp with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/smtp",
        "description": "Operation on smtp.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/smtp",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/general": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/general",
        "description": "List general with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/general",
        "description": "Operation on general.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/general",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/notifications": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/notifications",
        "description": "List notifications with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/notifications",
        "description": "Operation on notifications.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/notifications",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/security": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/security",
        "description": "List security with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/security",
        "description": "Operation on security.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/security/api-keys": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/security/api-keys",
        "description": "List api-keys with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/settings"
        ],
        "summary": "POST /api/system/settings/security/api-keys",
        "description": "Create a new api-key.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/security/api-keys/{id}": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/security/api-keys/:id",
        "description": "Get a api-key by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/security/api-keys/:id",
        "description": "Update an existing api-key.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/settings"
        ],
        "summary": "DELETE /api/system/settings/security/api-keys/:id",
        "description": "Delete a api-key.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/security/api-keys/{id}/activate": {
      "post": {
        "tags": [
          "system/settings"
        ],
        "summary": "POST /api/system/settings/security/api-keys/:id/activate",
        "description": "Operation on activate.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/security/api-keys/{id}/deactivate": {
      "post": {
        "tags": [
          "system/settings"
        ],
        "summary": "POST /api/system/settings/security/api-keys/:id/deactivate",
        "description": "Operation on deactivate.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/security/api-keys/{id}/rotate": {
      "post": {
        "tags": [
          "system/settings"
        ],
        "summary": "POST /api/system/settings/security/api-keys/:id/rotate",
        "description": "Operation on rotate.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/security/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/auth-methods": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/auth-methods",
        "description": "List auth-methods with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/auth-methods",
        "description": "Operation on auth-methods.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/auth-methods",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/sso": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/sso",
        "description": "List sso with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/sso",
        "description": "Operation on sso.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/sso",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/branding": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/branding",
        "description": "List branding with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/branding",
        "description": "Operation on branding.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/branding",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/settings/email-templates": {
      "get": {
        "tags": [
          "system/settings"
        ],
        "summary": "GET /api/system/settings/email-templates",
        "description": "List email-templates with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/settings"
        ],
        "summary": "PUT /api/system/settings/email-templates",
        "description": "Operation on email-templates.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/settings/email-templates",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/workflows/rules": {
      "get": {
        "tags": [
          "system/workflows"
        ],
        "summary": "GET /api/system/workflows/rules",
        "description": "List rules with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/workflows"
        ],
        "summary": "POST /api/system/workflows/rules",
        "description": "Create a new rule.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/workflows/rules/{id}": {
      "get": {
        "tags": [
          "system/workflows"
        ],
        "summary": "GET /api/system/workflows/rules/:id",
        "description": "Get a rule by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/workflows"
        ],
        "summary": "PUT /api/system/workflows/rules/:id",
        "description": "Update an existing rule.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/workflows"
        ],
        "summary": "DELETE /api/system/workflows/rules/:id",
        "description": "Delete a rule.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/workflows/rules/{id}/enable": {
      "post": {
        "tags": [
          "system/workflows"
        ],
        "summary": "POST /api/system/workflows/rules/:id/enable",
        "description": "Operation on enable.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/enable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/enable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/enable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/enable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/enable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/workflows/rules/{id}/disable": {
      "post": {
        "tags": [
          "system/workflows"
        ],
        "summary": "POST /api/system/workflows/rules/:id/disable",
        "description": "Operation on disable.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/disable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/disable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/disable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/disable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/disable",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/workflows/rules/{id}/test": {
      "post": {
        "tags": [
          "system/workflows"
        ],
        "summary": "POST /api/system/workflows/rules/:id/test",
        "description": "Operation on test.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/test",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/test",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/test",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/test",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/rules/:id/test",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/workflows/conditions": {
      "get": {
        "tags": [
          "system/workflows"
        ],
        "summary": "GET /api/system/workflows/conditions",
        "description": "List conditions with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/conditions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/workflows/actions": {
      "get": {
        "tags": [
          "system/workflows"
        ],
        "summary": "GET /api/system/workflows/actions",
        "description": "List actions with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/workflows/actions",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/inbox/emails": {
      "get": {
        "tags": [
          "system/inbox"
        ],
        "summary": "GET /api/system/inbox/emails",
        "description": "List emails with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/inbox"
        ],
        "summary": "POST /api/system/inbox/emails",
        "description": "Create a new email.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/inbox/emails/{id}": {
      "get": {
        "tags": [
          "system/inbox"
        ],
        "summary": "GET /api/system/inbox/emails/:id",
        "description": "Get a email by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/inbox"
        ],
        "summary": "PUT /api/system/inbox/emails/:id",
        "description": "Update an existing email.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/inbox"
        ],
        "summary": "DELETE /api/system/inbox/emails/:id",
        "description": "Delete a email.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/inbox/emails/{id}/process": {
      "post": {
        "tags": [
          "system/inbox"
        ],
        "summary": "POST /api/system/inbox/emails/:id/process",
        "description": "Operation on process.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/process",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/process",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/process",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/process",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/process",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/inbox/emails/{id}/retry": {
      "post": {
        "tags": [
          "system/inbox"
        ],
        "summary": "POST /api/system/inbox/emails/:id/retry",
        "description": "Operation on retry.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/retry",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/retry",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/retry",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/retry",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/retry",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/inbox/emails/{id}/fail": {
      "post": {
        "tags": [
          "system/inbox"
        ],
        "summary": "POST /api/system/inbox/emails/:id/fail",
        "description": "Operation on fail.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/fail",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/fail",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/fail",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/fail",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/inbox/emails/:id/fail",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/files": {
      "get": {
        "tags": [
          "system/files"
        ],
        "summary": "GET /api/system/files",
        "description": "List files with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "system/files"
        ],
        "summary": "POST /api/system/files",
        "description": "Create a new file.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/files/{id}": {
      "get": {
        "tags": [
          "system/files"
        ],
        "summary": "GET /api/system/files/:id",
        "description": "Get a file by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "system/files"
        ],
        "summary": "PUT /api/system/files/:id",
        "description": "Update an existing file.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "system/files"
        ],
        "summary": "DELETE /api/system/files/:id",
        "description": "Delete a file.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/files/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/audit": {
      "get": {
        "tags": [
          "system/audit"
        ],
        "summary": "GET /api/system/audit",
        "description": "List audit with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/system/audit/{id}": {
      "get": {
        "tags": [
          "system/audit"
        ],
        "summary": "GET /api/system/audit/:id",
        "description": "Get a audit by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/system/audit/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/admin/me": {
      "get": {
        "tags": [
          "admin/me"
        ],
        "summary": "GET /api/admin/me",
        "description": "List me with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin/me"
        ],
        "summary": "PUT /api/admin/me",
        "description": "Operation on me.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/me",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/admin/preferences": {
      "get": {
        "tags": [
          "admin/preferences"
        ],
        "summary": "GET /api/admin/preferences",
        "description": "List preferences with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin/preferences"
        ],
        "summary": "PUT /api/admin/preferences",
        "description": "Operation on preferences.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/preferences",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/admin/notifications": {
      "get": {
        "tags": [
          "admin/notifications"
        ],
        "summary": "GET /api/admin/notifications",
        "description": "List notifications with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/admin/notifications",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/public/ping": {
      "get": {
        "tags": [
          "public/ping"
        ],
        "summary": "GET /api/public/ping",
        "description": "List ping with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/ping",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/endpoints": {
      "get": {
        "tags": [
          "public/endpoints"
        ],
        "summary": "GET /api/public/endpoints",
        "description": "List endpoints with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/endpoints",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/tickets": {
      "get": {
        "tags": [
          "public/tickets"
        ],
        "summary": "GET /api/public/tickets",
        "description": "List tickets with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "public/tickets"
        ],
        "summary": "POST /api/public/tickets",
        "description": "Create a new ticket.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "validation": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Validation failed"
                      },
                      "details": {
                        "missing": [
                          "title",
                          "description"
                        ]
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/tickets/lookup": {
      "get": {
        "tags": [
          "public/tickets"
        ],
        "summary": "GET /api/public/tickets/lookup",
        "description": "List lookup with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "missingReference": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "reference is required"
                      },
                      "details": {
                        "params": {
                          "reference": "ticket reference/key"
                        }
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets/lookup",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Ticket not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/tickets/lookup",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/faqs": {
      "get": {
        "tags": [
          "public/faqs"
        ],
        "summary": "GET /api/public/faqs",
        "description": "List faqs with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/faqs/{id}": {
      "get": {
        "tags": [
          "public/faqs"
        ],
        "summary": "GET /api/public/faqs/:id",
        "description": "Get a faq by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/faqs/{id}/rate": {
      "post": {
        "tags": [
          "public/faqs"
        ],
        "summary": "POST /api/public/faqs/:id/rate",
        "description": "Operation on rate.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/faqs/{id}/ratings/summary": {
      "get": {
        "tags": [
          "public/faqs"
        ],
        "summary": "GET /api/public/faqs/:id/ratings/summary",
        "description": "Get a summary by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/faqs/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/kb/articles": {
      "get": {
        "tags": [
          "public/kb"
        ],
        "summary": "GET /api/public/kb/articles",
        "description": "List articles with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/kb/articles/{id}": {
      "get": {
        "tags": [
          "public/kb"
        ],
        "summary": "GET /api/public/kb/articles/:id",
        "description": "Get a article by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/kb/articles/{id}/rate": {
      "post": {
        "tags": [
          "public/kb"
        ],
        "summary": "POST /api/public/kb/articles/:id/rate",
        "description": "Operation on rate.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/kb/articles/{id}/ratings/summary": {
      "get": {
        "tags": [
          "public/kb"
        ],
        "summary": "GET /api/public/kb/articles/:id/ratings/summary",
        "description": "Get a summary by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/kb/articles/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/videos": {
      "get": {
        "tags": [
          "public/videos"
        ],
        "summary": "GET /api/public/videos",
        "description": "List videos with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/videos/categories": {
      "get": {
        "tags": [
          "public/videos"
        ],
        "summary": "GET /api/public/videos/categories",
        "description": "List categories with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/categories",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/videos/{id}/rate": {
      "post": {
        "tags": [
          "public/videos"
        ],
        "summary": "POST /api/public/videos/:id/rate",
        "description": "Operation on rate.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/rate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/videos/{id}/ratings/summary": {
      "get": {
        "tags": [
          "public/videos"
        ],
        "summary": "GET /api/public/videos/:id/ratings/summary",
        "description": "Get a summary by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/videos/:id/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/public/search": {
      "get": {
        "tags": [
          "public/search"
        ],
        "summary": "GET /api/public/search",
        "description": "List search with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/public/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/tokens/api-keys": {
      "get": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "GET /api/tokens/api-keys",
        "description": "List api-keys with pagination and filtering.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "POST /api/tokens/api-keys",
        "description": "Create a new api-key.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tokens/api-keys/{id}": {
      "get": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "GET /api/tokens/api-keys/:id",
        "description": "Get a api-key by ID.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "PUT /api/tokens/api-keys/:id",
        "description": "Update an existing api-key.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "DELETE /api/tokens/api-keys/:id",
        "description": "Delete a api-key.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tokens/api-keys/{id}/activate": {
      "post": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "POST /api/tokens/api-keys/:id/activate",
        "description": "Operation on activate.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/activate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tokens/api-keys/{id}/deactivate": {
      "post": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "POST /api/tokens/api-keys/:id/deactivate",
        "description": "Operation on deactivate.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/deactivate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/tokens/api-keys/{id}/rotate": {
      "post": {
        "tags": [
          "tokens/api-keys"
        ],
        "summary": "POST /api/tokens/api-keys/:id/rotate",
        "description": "Operation on rotate.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/tokens/api-keys/:id/rotate",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/knowledge/faqs": {
      "get": {
        "tags": [
          "knowledge/faqs"
        ],
        "summary": "List FAQs",
        "description": "List FAQs with pagination and optional search/filter.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "system_category_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by system category id"
          },
          {
            "name": "is_published",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "description": "Filter by publication state"
          }
        ],
        "responses": {
          "200": {
            "description": "List of FAQs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "payload": {
                    "value": [
                      {
                        "id": "00000000-0000-0000-0000-000000000001",
                        "title": "How to reset password?",
                        "body": "Use the reset link…",
                        "is_published": true,
                        "system_category_id": 1
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "knowledge/faqs"
        ],
        "summary": "Create FAQ",
        "description": "Create a new FAQ.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FAQ"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FAQ"
              },
              "example": {
                "title": "How to reset password?",
                "body": "Use the reset link…",
                "is_published": true,
                "system_category_id": 1
              }
            }
          }
        }
      }
    },
    "/api/knowledge/faqs/{id}": {
      "get": {
        "tags": [
          "knowledge/faqs"
        ],
        "summary": "Get FAQ",
        "description": "Get FAQ by id.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "knowledge/faqs"
        ],
        "summary": "Update FAQ",
        "description": "Update FAQ by id.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/faqs/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FAQ"
              }
            }
          }
        }
      }
    },
    "/api/knowledge/kb/articles": {
      "get": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "List KB articles",
        "description": "List knowledge base articles with pagination and search.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "is_published",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "description": "Filter by publication state"
          }
        ],
        "responses": {
          "200": {
            "description": "List of KB articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "payload": {
                    "value": [
                      {
                        "id": "10000000-0000-0000-0000-000000000001",
                        "title": "Printer troubleshooting",
                        "body": "Steps…",
                        "is_published": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Create KB article",
        "description": "Create a new KB article.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KBArticle"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KBArticle"
              },
              "example": {
                "title": "Printer troubleshooting",
                "body": "Steps…",
                "is_published": true,
                "tags": [
                  "hardware",
                  "printer"
                ]
              }
            }
          }
        }
      }
    },
    "/api/knowledge/kb/articles/{id}": {
      "get": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Get KB article",
        "description": "Get KB article by id.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Update KB article",
        "description": "Update KB article by id.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/articles/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KBArticle"
              }
            }
          }
        }
      }
    },
    "/api/knowledge/videos": {
      "get": {
        "tags": [
          "knowledge/videos"
        ],
        "summary": "List videos",
        "description": "List videos with pagination and filters.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "category_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by video category id (UUID)"
          },
          {
            "name": "system_category_id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter by system category id"
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by language"
          },
          {
            "name": "is_published",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            },
            "description": "Filter by publication state"
          }
        ],
        "responses": {
          "200": {
            "description": "List of videos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "payload": {
                    "value": [
                      {
                        "id": "20000000-0000-0000-0000-000000000001",
                        "title": "How to file a ticket",
                        "url": "https://example.com/v/1",
                        "duration_seconds": 120,
                        "language": "en",
                        "is_published": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "knowledge/videos"
        ],
        "summary": "Create video",
        "description": "Create a new video.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Video"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Video"
              },
              "example": {
                "title": "How to file a ticket",
                "url": "https://example.com/v/1",
                "duration_seconds": 120,
                "language": "en",
                "is_published": true,
                "system_category_id": 1
              }
            }
          }
        }
      }
    },
    "/api/knowledge/videos/{id}": {
      "get": {
        "tags": [
          "knowledge/videos"
        ],
        "summary": "Get video",
        "description": "Get video by id.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "knowledge/videos"
        ],
        "summary": "Update video",
        "description": "Update video by id.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/videos/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Video"
              }
            }
          }
        }
      }
    },
    "/api/knowledge/search": {
      "get": {
        "tags": [
          "knowledge/search"
        ],
        "summary": "Search knowledge",
        "description": "Search across FAQs, KB Articles, and Videos by title.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search term"
          }
        ],
        "responses": {
          "200": {
            "description": "Search result buckets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeSearchResult"
                },
                "examples": {
                  "payload": {
                    "value": {
                      "faqs": [
                        {
                          "id": "00000000-0000-0000-0000-000000000001",
                          "title": "Password reset"
                        }
                      ],
                      "kb": [
                        {
                          "id": "10000000-0000-0000-0000-000000000001",
                          "title": "Printer troubleshooting"
                        }
                      ],
                      "videos": [
                        {
                          "id": "20000000-0000-0000-0000-000000000001",
                          "title": "Intro video"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/search",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/knowledge/kb/ratings": {
      "get": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "List KB ratings",
        "description": "List KB article ratings with optional filters.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "article_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by KB article id"
          },
          {
            "name": "user_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Filter by user id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Create or update rating",
        "description": "Create a rating; on conflict (article_id,user_id) updates rating.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Created/Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KBRating"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KBRating"
              },
              "example": {
                "article_id": "10000000-0000-0000-0000-000000000001",
                "user_id": "30000000-0000-0000-0000-000000000001",
                "rating": 5
              }
            }
          }
        }
      }
    },
    "/api/knowledge/kb/ratings/{id}": {
      "get": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Get rating",
        "description": "Get a KB rating by id.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Update rating",
        "description": "Update a KB rating.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KBRating"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Delete rating",
        "description": "Delete a KB rating.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/knowledge/kb/ratings/summary": {
      "get": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Rating summary",
        "description": "Return average rating and count for a KB article.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "article_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Summary",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KBRatingSummary"
                },
                "examples": {
                  "payload": {
                    "value": {
                      "avg": 4.5,
                      "count": 10
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/ratings/summary",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/knowledge/kb/tags": {
      "get": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "List tags",
        "description": "List KB tags.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by name contains"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Create tag",
        "description": "Create a tag.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KBTag"
              },
              "example": {
                "name": "howto"
              }
            }
          }
        }
      }
    },
    "/api/knowledge/kb/tags/{id}": {
      "get": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Get tag",
        "description": "Get a tag by id.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags/{id}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Update tag",
        "description": "Update tag name.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags/{id}",
                      "method": "PUT",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Delete tag",
        "description": "Delete a tag.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Resource not found"
                      },
                      "details": {
                        "id": "123"
                      },
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tags/{id}",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/knowledge/kb/tag-map": {
      "get": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "List article-tag mappings",
        "description": "List mappings between articles and tags.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          },
          {
            "name": "article_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tag_id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Add mapping",
        "description": "Map a tag to an article.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "POST",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KBArticleTag"
              },
              "example": {
                "article_id": "10000000-0000-0000-0000-000000000001",
                "tag_id": "40000000-0000-0000-0000-000000000001"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "Remove mapping",
        "description": "Remove a tag from an article.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map",
                      "method": "DELETE",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KBArticleTag"
              },
              "example": {
                "article_id": "10000000-0000-0000-0000-000000000001",
                "tag_id": "40000000-0000-0000-0000-000000000001"
              }
            }
          }
        }
      }
    },
    "/api/knowledge/kb/tag-map/article/{articleId}": {
      "get": {
        "tags": [
          "knowledge/kb"
        ],
        "summary": "List tags for article",
        "description": "List tag_id and name for a given article.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KBArticleTagEntry"
                  }
                },
                "examples": {
                  "payload": {
                    "value": [
                      {
                        "tag_id": "40000000-0000-0000-0000-000000000001",
                        "name": "howto"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map/article/{articleId}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map/article/{articleId}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map/article/{articleId}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map/article/{articleId}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/knowledge/kb/tag-map/article/{articleId}",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/api/info": {
      "get": {
        "tags": [
          "info"
        ],
        "summary": "Server info",
        "description": "Service health and environment details. Authentication required; available to Admin or Superuser.",
        "parameters": [
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Bracket projection to shape nested data and expansions in one param. Example: users[id,full_name,roles[id,name,permissions[code]]]. Overrides 'fields' and 'expand'. Use fields='*' to bypass projection."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in the response. Supports dot paths into nested objects/arrays (e.g., 'ticket_key,title,reporter_user.email,attachments.file_name')."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of nested relations to expand (e.g., 'roles,roles.permissions,assigned_agent')."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Page number (1-based)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "description": "Items per page (max 100)"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "badRequest": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "BAD_REQUEST",
                        "message": "Bad request"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/info",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "unauthorized": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "UNAUTHORIZED",
                        "message": "Authentication required"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/info",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "examples": {
                  "forbidden": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "FORBIDDEN",
                        "message": "Insufficient permissions"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/info",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "examples": {
                  "notFound": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "NOT_FOUND",
                        "message": "Not found"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/info",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "examples": {
                  "unexpected": {
                    "value": {
                      "ok": false,
                      "error": {
                        "code": "INTERNAL_ERROR",
                        "message": "Unexpected error"
                      },
                      "details": null,
                      "request_id": "REQ-abc123",
                      "path": "/api/info",
                      "method": "GET",
                      "timestamp": "2025-09-23T12:00:00.000Z"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          },
          {
            "apiKeyAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "x-roles-any": [
          "Admin",
          "Superuser"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "access_token"
      }
    },
    "schemas": {
      "ErrorResponseBase": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          },
          "details": {
            "type": "object",
            "additionalProperties": true
          },
          "request_id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "KBRatingSummary": {
        "type": "object",
        "properties": {
          "avg": {
            "type": "number"
          },
          "count": {
            "type": "integer"
          }
        }
      },
      "KBArticleTag": {
        "type": "object",
        "required": [
          "article_id",
          "tag_id"
        ],
        "properties": {
          "article_id": {
            "type": "string",
            "format": "uuid"
          },
          "tag_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "KBArticleTagEntry": {
        "type": "object",
        "properties": {
          "tag_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "KBTag": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "KBArticle": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FAQ": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "system_category_id": {
            "type": "integer",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Video": {
        "type": "object",
        "required": [
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category_id": {
            "type": "string",
            "format": "uuid"
          },
          "system_category_id": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          },
          "duration_seconds": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "is_published": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "KBRating": {
        "type": "object",
        "required": [
          "article_id",
          "rating"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "article_id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "KnowledgeSearchResult": {
        "type": "object",
        "properties": {
          "faqs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "kb": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}